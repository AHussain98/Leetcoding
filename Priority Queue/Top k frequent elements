Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.


class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        // create an ordered map
       unordered_map<int,int> map;
       for(auto num : nums){
           map[num]++;
       }

       // we now have a map of elements and the number of times they appear

       vector<int> res; // result vector
       priority_queue<pair<int,int>> pq; // priority queue of pairs, we'll push the map elements in here
       for(auto i : map){
         pq.push({i.second,i.first});
       }

       // while loop, push into ans
       while(k > 0  && !pq.empty()){
           k--;
           res.push_back(pq.top().second);
           pq.pop();
       }

       return res;

    }
};
