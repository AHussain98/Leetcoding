Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

class Solution {
public:
    int firstUniqChar(string s) {
             
      // the 26 alphabetical chars have their ASCII values in consecttive order
      // we can create a vetcor that stores the occurances of each of these
      // then run through it and the first one that only occurs once is our answer

      std::vector<int> counts(26);
      for(int i = 0; i < s.size(); ++i){
          counts[s[i] - 'a']++; // increase the count for each char in the string
      } 

      // now run through

      for(int i = 0; i < s.size(); ++i){
          if(counts[s[i] - 'a'] == 1){
              return i;
          }
      }

// otherwise there isnt one
return -1;
       
       
       
       
       
       
       
    }  
};     
