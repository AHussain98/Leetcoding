You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        // to rotate the matrix in place, we can first transpose it and then reverse the rows
        int size = matrix[0].size();
        for(int i = 0; i < size; ++i){  // here is the transpose
            for(int j = 0; j <= i; ++j){
               swap(matrix[i][j], matrix[j][i]);  // swap() is in the <utility> header, calls copy constructor and does 2 assignments
            }
        }
        // now we have transposed the matrix, lets reverse each row
        for (int i = 0; i < size; ++i){
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
