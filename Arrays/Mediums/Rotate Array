Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.



class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        // every element in the array gets rotated to the right by k elements
        std::vector<int> temp(nums);  /// create a clean array
        for(int i = 0; i < nums.size(); ++i ){
            nums[(i+k)% nums.size()] = temp[i];  // shift each element and then mod by the size of the array
        }
    }
};


// the above approach is O(N) time and O(N) space
// lets try doing it inplace

    class Solution 
    {
    public:
        void rotate(int nums[], int n, int k) 
        {
            k = k%n;
    
            // Reverse the first n - k numbers.
            // Index i (0 <= i < n - k) becomes n - k - i.
            reverse(nums, nums + n - k);
            
            // Reverse tha last k numbers.
            // Index n - k + i (0 <= i < k) becomes n - i.
            reverse(nums + n - k, nums + n);
            
            // Reverse all the numbers.
            // Index i (0 <= i < n - k) becomes n - (n - k - i) = i + k.
            // Index n - k + i (0 <= i < k) becomes n - (n - i) = i.
            reverse(nums, nums + n);
        }
    };

