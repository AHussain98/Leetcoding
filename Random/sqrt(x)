Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.




class Solution {
public:
    int mySqrt(int x) {
        long i = 1;  // int gives overflow
        for(; i*i <= x; ++i){
            if (i*i == x){
                return i;
            }
        }
        return i -1;
        
    }

    // easier to accomplish using a while loop
    // try solving using a binary search, this is logn, the current solution is O(sqrtn)
};
